# Configuration validation examples for peer discovery modes and topologies
# This file demonstrates valid and invalid configurations for testing

# === VALID CONFIGURATIONS ===

# Valid: Dynamic mode with Mesh topology
valid_dynamic_mesh:
  general:
    stop_time: "10m"
  network:
    type: "1_gbit_switch"
    peer_mode: "Dynamic"
    topology: "Mesh"
  agents:
    user_agents:
      - daemon: "monerod"
        attributes:
          is_miner: "true"

# Valid: Hardcoded mode with Star topology (≥2 agents)
valid_hardcoded_star:
  general:
    stop_time: "10m"
  network:
    type: "1_gbit_switch"
    peer_mode: "Hardcoded"
    topology: "Star"
    seed_nodes:
      - "192.168.1.10:28080"
  agents:
    user_agents:
      - daemon: "monerod"
      - daemon: "monerod"

# Valid: Hardcoded mode with Ring topology (≥3 agents)
valid_hardcoded_ring:
  general:
    stop_time: "10m"
  network:
    type: "1_gbit_switch"
    peer_mode: "Hardcoded"
    topology: "Ring"
  agents:
    user_agents:
      - daemon: "monerod"
      - daemon: "monerod"
      - daemon: "monerod"

# Valid: Hybrid mode with GML network
valid_hybrid_gml:
  general:
    stop_time: "10m"
  network:
    path: "testnet.gml"
    peer_mode: "Hybrid"
    topology: "Dag"
    seed_nodes:
      - "10.0.0.10:28080"
  agents:
    user_agents:
      - daemon: "monerod"

# === INVALID CONFIGURATIONS (for testing validation) ===

# Invalid: Star topology with only 1 agent (requires ≥2)
invalid_star_single_agent:
  general:
    stop_time: "10m"
  network:
    type: "1_gbit_switch"
    peer_mode: "Hardcoded"
    topology: "Star"
  agents:
    user_agents:
      - daemon: "monerod"  # Only 1 agent, should fail validation

# Invalid: Ring topology with only 2 agents (requires ≥3)
invalid_ring_two_agents:
  general:
    stop_time: "10m"
  network:
    type: "1_gbit_switch"
    peer_mode: "Hardcoded"
    topology: "Ring"
  agents:
    user_agents:
      - daemon: "monerod"
      - daemon: "monerod"  # Only 2 agents, should fail validation

# Invalid: Unknown peer mode
invalid_unknown_peer_mode:
  general:
    stop_time: "10m"
  network:
    type: "1_gbit_switch"
    peer_mode: "Unknown"  # Invalid peer mode
    topology: "Dag"
  agents:
    user_agents:
      - daemon: "monerod"

# Invalid: Unknown topology
invalid_unknown_topology:
  general:
    stop_time: "10m"
  network:
    type: "1_gbit_switch"
    peer_mode: "Hardcoded"
    topology: "Unknown"  # Invalid topology
  agents:
    user_agents:
      - daemon: "monerod"

# Invalid: Dynamic mode with explicit seed nodes (should be empty)
invalid_dynamic_with_seeds:
  general:
    stop_time: "10m"
  network:
    type: "1_gbit_switch"
    peer_mode: "Dynamic"
    topology: "Mesh"
    seed_nodes:
      - "192.168.1.10:28080"  # Should be empty for Dynamic mode
  agents:
    user_agents:
      - daemon: "monerod"

# === EDGE CASES ===

# Edge case: Mesh topology with many agents (should warn)
edge_case_mesh_large:
  general:
    stop_time: "10m"
  network:
    type: "1_gbit_switch"
    peer_mode: "Hardcoded"
    topology: "Mesh"
  agents:
    user_agents: []  # Would be populated with 60+ agents for warning test

# Edge case: Empty seed nodes array (valid for Dynamic mode)
edge_case_empty_seeds:
  general:
    stop_time: "10m"
  network:
    type: "1_gbit_switch"
    peer_mode: "Dynamic"
    topology: "Dag"
    seed_nodes: []  # Explicitly empty, valid for Dynamic
  agents:
    user_agents:
      - daemon: "monerod"