--- a/src/shadow_agents.rs
+++ b/src/shadow_agents.rs
@@ -161,8 +161,11 @@ pub fn generate_agent_shadow_config(
         
         // Add connections to seed nodes
         if i > 0 {
-            daemon_args.push("--add-priority-node=11.0.0.1:28080".to_string());
-            daemon_args.push("--add-priority-node=11.0.0.2:28080".to_string());
+            // Connect to the first few user nodes as seed nodes
+            daemon_args.push("--add-priority-node=11.0.0.10:28080".to_string());
+            if agent_config.regular_users > 1 {
+                daemon_args.push("--add-priority-node=11.0.0.11:28080".to_string());
+            }
         }
         
         let monerod_path = std::fs::canonicalize("monerod")
@@ -319,8 +322,11 @@ pub fn generate_agent_shadow_config(
             format!("--p2p-bind-port={}", node_port),
             "--fixed-difficulty=200".to_string(),
             "--allow-local-ip".to_string(),
-            "--add-priority-node=11.0.0.1:28080".to_string(),
-            "--add-priority-node=11.0.0.2:28080".to_string(),
+            // Connect to actual user nodes
+            "--add-priority-node=11.0.0.10:28080".to_string(),
+            if agent_config.regular_users > 1 {
+                "--add-priority-node=11.0.0.11:28080".to_string()
+            }
         ];
         
         let monerod_path = std::fs::canonicalize("monerod")
@@ -380,8 +386,10 @@ pub fn generate_agent_shadow_config(
     
     // Block controller agent with wallet RPC info
     let agent_args = format!(
-        "--interval 120 --blocks 1 --wallet-rpc {} --wallet-host {} --daemon-host 11.0.0.10 --daemon-rpc 28090",
-        block_controller_wallet_port, block_controller_ip
+        "--interval 120 --blocks 1 --wallet-rpc {} --wallet-host {} \
+         --daemon-host 11.0.0.10 --daemon-rpc 28090 \
+         --log-level INFO",
+        block_controller_wallet_port, block_controller_ip
     );
     
     block_controller_processes.push(ShadowProcess {
@@ -402,7 +410,7 @@ pub fn generate_agent_shadow_config(
     // 5. Add monitoring scripts (optional)
     let monitor_process = ShadowProcess {
         path: "/bin/bash".to_string(),
-        args: create_agent_command(&current_dir, "../scripts/monitor.py", ""),
+        args: format!("-c 'cd {} && . ./venv/bin/activate && python3 scripts/monitor.py'", current_dir),
         environment: environment.clone(),
         start_time: "30s".to_string(),
     };